In MATLAB, there is a very useful function called 'reshape', which can reshape a matrix into a new one with different size but keep its original data.

You're given a matrix represented by a two-dimensional array, and two positive integers r and c representing the row number and column number of the wanted reshaped matrix, respectively.

The reshaped matrix need to be filled with all the elements of the original matrix in the same row-traversing order as they were.

If the 'reshape' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.

Example 1:
Input: 
nums = 
[[1,2],
 [3,4]]
r = 1, c = 4
Output: 
[[1,2,3,4]]


class Solution {
    public int[][] matrixReshape(int[][] nums, int r, int c) {
        int m = nums.length;
        int n = nums[0].length;
        if (r*c!=m*n) return nums;
        int[][] res = new int[r][c];
        for(int i =0;i<m*n;i++){
            res[i/c][i%c] = nums[i/n][i%n];
        }
        return res;
// A 稍麻烦,可根据两个矩阵总数一样进行循环
//         if (r*c!=nums.length*nums[0].length) return nums;
//         int[][] res = new int[r][c];
//         int count = 0;
//         int nums_c = nums[0].length;
//         for(int i=0;i<r;i++){
//             for(int j=0;j<c;j++){
//                 res[i][j]=nums[count/nums_c][count%nums_c];
//                 count++;
//             }
//         }
            
//         return res;
    }
}

