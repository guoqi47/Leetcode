Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.

The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the robot makes a circle.

Example 1:
Input: "UD"
Output: true
Example 2:
Input: "LL"
Output: false

class Solution {
    public boolean judgeCircle(String moves) {
        int x = 0, y = 0;
        for(char ch:moves.toCharArray()){
            if (ch == 'U') y++;
            else if (ch == 'D') y--;
            else if (ch == 'R') x++;
            else if (ch == 'L') x--;
        }
        return x==0 && y==0;
        
        
        //A,用到map
        // Map<Character,Integer> m= new HashMap();
        // m.put('U',0);m.put('L',0);m.put('D',0);m.put('R',0);
        // for(char c:moves.toCharArray()){
        //     if(m.containsKey(c)) m.put(c,m.get(c)+1);
        //     else m.put(c, 1);
        // }
        // //错误写法,Integer为对象，如果判断相等要用equals，而不能用==
        // // return m.get('L')==m.get('R') && m.get('U')==m.get('D'); 
        // return m.get('L').equals(m.get('R')) && m.get('U').equals(m.get('D'));
    }
}
