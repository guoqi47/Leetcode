Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 <= i <= N) in this array:

The number at the ith position is divisible by i.
i is divisible by the number at the ith position.
Now given N, how many beautiful arrangements can you construct?

Example 1:
Input: 2
Output: 2
Explanation: 

The first beautiful arrangement is [1, 2]:

Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).

Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).

The second beautiful arrangement is [2, 1]:

Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).

Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.



class Solution {
    int res = 0;
    public int countArrangement(int N) {
        if(N==0) return 0;
        helper(N, 1, new int[N+1]);
        return res;
    }
    //pos表示位置
    public void helper(int N, int pos, int[] visited){
        //全部把数字安排好,结果数加一
        if(pos>N){
            res++;
            return ;
        }
        for(int i=1; i<=N; i++){
            //第i个数字没有被用,且可以被i整除或整除i
            if(visited[i]==0 && (i%pos==0 || pos%i==0)){
                visited[i]=1;
                helper(N,pos+1,visited);
                //递归完后要置为未访问
                visited[i]=0;
            }
        }
    }
    
}
