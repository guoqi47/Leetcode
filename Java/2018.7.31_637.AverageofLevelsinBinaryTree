Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
Example 1:
Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //树的广度优先遍历
    public List<Double> averageOfLevels(TreeNode root) {
        //队列的声明
        //LinkedList类实现了Queue接口，因此可以把LinkedList当成Queue来用
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        List<Double> res = new ArrayList<Double> ();
        
        if(root==null) return null;
        q.add(root);
        while(!q.isEmpty()){
            int count = q.size();
            double sum = 0.0;
            for(int i=0; i<count; i++){
                TreeNode newNode = q.poll();
                sum+=newNode.val;
                if(newNode.left!=null) q.offer(newNode.left);
                if(newNode.right!=null) q.offer(newNode.right);
            }
            res.add(sum/count);
        }
        return res;
    }
}

