Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.


class Solution {
    public int maxProduct(int[] nums) {
        //参考的答案,O(n)
        if(nums.length==0) return 0;
        int max=nums[0],min =nums[0], res = nums[0];
        for(int i=1; i<nums.length;i++){
            int temp = max;
            max = Math.max(Math.max(nums[i]*max,nums[i]*min),nums[i]);
            min = Math.min(Math.min(nums[i]*temp,nums[i]*min),nums[i]);
            
            res = max>res? max :res;
        }
        return res;
        
        
        // A,暴力解法,O(n2)
        // int N = nums.length;
        // int maxcount=nums[0];
        // for(int i=0;i<N;i++){
        //     int count =1;
        //     for(int j=0;i+j<N;j++){
        //         count*=nums[i+j];
        //         maxcount = (count>maxcount)?count:maxcount;
        //     }
        // }
        // return maxcount;
    }
}

