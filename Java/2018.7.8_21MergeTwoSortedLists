Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */


class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //递归解法
        //先判断两个中是否有null
        if(l1 == null) return l2;
		if(l2 == null) return l1;
        if(l1.val<l2.val){
            l1.next = mergeTwoLists(l1.next,l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;
        }
        
//         //A,重新造了一个List
//         //先判断两个中是否有null
//         if(l1==null || l2==null) return (l1==null)?l2:l1;
//         ListNode res = null;
//         if(l1.val>l2.val){
//             res = l2; l2 = l2.next; 
//         }else{
//             res = l1; l1 = l1.next;
//         }
//         ListNode head = res;
        
//         while(l1!=null && l2!=null){
//             if(l1.val<l2.val){
//                 res.next = l1;
//                 l1 = l1.next;
//             }else{
//                 res.next = l2;
//                 l2 = l2.next;
//             }
//             res = res.next;
//         }
//         res.next=(l1==null) ? l2:l1;
//         return head;
    }
}
