Given a non-empty array of integers, return the k most frequent elements.

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]


class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int i:nums){
            int temp = map.getOrDefault(i,0);
            map.put(i,temp+1);
        }
        //建桶
        ArrayList<Integer>[] bucket= new ArrayList[nums.length+1]; 
        for(int i:map.keySet()){
            if(bucket[map.get(i)]==null) bucket[map.get(i)] = new ArrayList();
            bucket[map.get(i)].add(i);
        }
        
        List res=new ArrayList();
        
        for(int i=nums.length;i>0;i--){
            if(bucket[i]!=null){
                for(int j:bucket[i]) res.add(j);
            }
            if(res.size()>=k) break;
        }
        return res.subList(0,k); //取list的前k个
    }
}
